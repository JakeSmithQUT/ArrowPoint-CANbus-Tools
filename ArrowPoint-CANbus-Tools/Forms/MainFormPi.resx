<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="header.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MinmV.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Max_mV.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Min_C.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Max_C.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Pack_mV.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Pack_mA.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="BalancePositive.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="BalanceNegative.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CMU_Count.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>